<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Failed suite [Suite]" duration-ms="35582" started-at="2020-01-23T10:01:57Z" finished-at="2020-01-23T10:02:33Z">
    <groups>
    </groups>
    <test name="Test1(failed)" duration-ms="35582" started-at="2020-01-23T10:01:57Z" finished-at="2020-01-23T10:02:33Z">
      <class name="tests.TC_001_Login_Valid">
        <test-method status="PASS" signature="classLevelSetup()[pri:0, instance:tests.TC_001_Login_Valid@4667ae56]" name="classLevelSetup" is-config="true" duration-ms="24" started-at="2020-01-23T10:01:57Z" finished-at="2020-01-23T10:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classLevelSetup -->
        <test-method status="PASS" signature="methodLevelSetup(java.lang.String)[pri:0, instance:tests.TC_001_Login_Valid@4667ae56]" name="methodLevelSetup" is-config="true" duration-ms="5777" started-at="2020-01-23T10:01:57Z" finished-at="2020-01-23T10:02:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="SKIP" signature="Invalid_Login_Test()[pri:0, instance:tests.TC_001_Login_Valid@4667ae56]" name="Invalid_Login_Test" duration-ms="17129" started-at="2020-01-23T10:02:03Z" description="Invalid Login Scenario" finished-at="2020-01-23T10:02:20Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect Username/Password] but found [Test]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect Username/Password] but found [Test]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at pages.Login.Verify_Error_Msg(Login.java:70)
at tests.TC_001_Login_Valid.Invalid_Login_Test(TC_001_Login_Valid.java:18)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Invalid_Login_Test -->
        <test-method status="PASS" signature="teardown(org.testng.ITestResult)[pri:0, instance:tests.TC_001_Login_Valid@4667ae56]" name="teardown" is-config="true" duration-ms="1373" started-at="2020-01-23T10:02:20Z" finished-at="2020-01-23T10:02:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Invalid_Login_Test status=SKIP method=TC_001_Login_Valid.Invalid_Login_Test()[pri:0, instance:tests.TC_001_Login_Valid@4667ae56] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="methodLevelSetup(java.lang.String)[pri:0, instance:tests.TC_001_Login_Valid@4667ae56]" name="methodLevelSetup" is-config="true" duration-ms="4452" started-at="2020-01-23T10:02:21Z" finished-at="2020-01-23T10:02:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="FAIL" signature="Invalid_Login_Test()[pri:0, instance:tests.TC_001_Login_Valid@4667ae56]" name="Invalid_Login_Test" duration-ms="4276" started-at="2020-01-23T10:02:26Z" description="Invalid Login Scenario" finished-at="2020-01-23T10:02:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect Username/Password] but found [Test]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect Username/Password] but found [Test]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at pages.Login.Verify_Error_Msg(Login.java:70)
at tests.TC_001_Login_Valid.Invalid_Login_Test(TC_001_Login_Valid.java:18)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Invalid_Login_Test -->
        <test-method status="PASS" signature="teardown(org.testng.ITestResult)[pri:0, instance:tests.TC_001_Login_Valid@4667ae56]" name="teardown" is-config="true" duration-ms="949" started-at="2020-01-23T10:02:32Z" finished-at="2020-01-23T10:02:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Invalid_Login_Test status=FAILURE method=TC_001_Login_Valid.Invalid_Login_Test()[pri:0, instance:tests.TC_001_Login_Valid@4667ae56] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- tests.TC_001_Login_Valid -->
    </test> <!-- Test1(failed) -->
  </suite> <!-- Failed suite [Suite] -->
</testng-results>
